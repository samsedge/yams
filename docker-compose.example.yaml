version: "3"

 

services:
  # plex is used to serve your media to the client devices
  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    network_mode: host # plex
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - <media_folder>/Movies:/data/movies
      - <media_folder>/Series:/data/tvshows
      - <media_folder>/Anime:/data/anime
      - <media_folder>/Audiobooks:/data/audiobooks
      - /opt/yams/config/plex:/config
    tmpfs:
      - /transcode
    ports:
      - 8096:8096
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

 

  # qBitorrent is used to download torrents
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - WEB_UI_PORT=8080
    volumes:
      - <media_folder>/downloads:/downloads
      - /opt/yams/config/qbittorrent:/config
    restart: unless-stopped
    ports: # qbittorrent
      - 8080:8080 # qbittorrent web
      - 6881:6881 # qbittrooent trackers
      - 6881:6881/udp
    #network_mode: "service:gluetun"

 

  # Overseerr
  overseerr:
    image: lscr.io/linuxserver/overseerr
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - <media_folder>/Movies:/data/movies
      - <media_folder>/Series:/data/tvshows
      - <media_folder>/Anime:/data/anime
      - <media_folder>/downloads:/downloads
      - /opt/yams/config/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped

 

# Sonarr is used to query, add downloads to the download queue and index TV shows
  # https://sonarr.tv/
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - <media_folder>/Series:/tv
      - <media_folder>/Anime:/anime
      - <media_folder>/downloads:/downloads
      - /opt/yams/config/sonarr:/config
    ports:
      - 8989:8989
    restart: unless-stopped


  # Radarr is used to query, add downloads to the download queue and index Movies
  # https://radarr.video/
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - <media_folder>/Movies:/movies
      - <media_folder>/downloads:/downloads
      - /opt/yams/config/radarr:/config
    ports:
      - 7878:7878
    restart: unless-stopped 

  # Lidarr is used to query, add downloads to the download queue and index Music
  # https://lidarr.audio/
#  lidarr:
#    image: lscr.io/linuxserver/lidarr
#    container_name: lidarr
#    environment:
#      - PUID=1000
#      - PGID=1000
#    volumes:
#      - <media_folder>/music:/music
#      - <media_folder>/downloads:/downloads
#      - /opt/yams/config/lidarr:/config
#    ports:
#      - 8686:8686
#    restart: unless-stopped

 

  # Readarr is used to query, add downloads to the download queue and index Audio and Ebooks
  # https://readarr.com/
#  readarr:
#    image: lscr.io/linuxserver/readarr:develop
#    container_name: readarr
#    environment:
#      - PUID=1000
#      - PGID=1000
#    volumes:
#      - <media_folder>/books:/books
#      - <media_folder>/downloads:/downloads
#      - /opt/yams/config/readarr:/config
#    ports:
#      - 8787:8787
#    restart: unless-stopped

 

  # Bazarr is used to download and categorize subtitles
  # https://www.bazarr.media/
  bazarr:
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - <media_folder>/Movies:/movies
      - <media_folder>/Series:/tv
      - <media_folder>/Anime:/anime
      - /opt/yams/config/bazarr:/config
    ports:
      - 6767:6767
    restart: unless-stopped
  
  
  # Prowlarr is our torrent indexer/searcher. Sonarr/Radarr use Prowlarr as a source
  # https://prowlarr.com/
  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /opt/yams/config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

 

  # Gluetun is our VPN, so you can download torrents safely
#  gluetun:
#    image: qmcgaw/gluetun:v3.34.1
#    container_name: gluetun
#    cap_add:
#      - NET_ADMIN
#    devices:
#      - /dev/net/tun:/dev/net/tun
#    ports:
#      - 8888:8888/tcp # HTTP proxy
#      - 8388:8388/tcp # Shadowsocks
#      - 8388:8388/udp # Shadowsocks
#      #- 8080:8080/tcp # gluetun
#    volumes:
#      - /opt/yams/config/gluetun:/config
#    environment:
#      - VPN_SERVICE_PROVIDER=<vpn_service>
#      - VPN_TYPE=openvpn
#      - OPENVPN_USER=<vpn_user>
#      - OPENVPN_PASSWORD=<vpn_password>
#      - SERVER_COUNTRIES=<vpn_country>
#      - OPENVPN_CIPHERS=AES-256-GCM
#    restart: unless-stopped

 

  # Portainer helps debugging and monitors the containers
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/yams/config/portainer:/data
    restart: unless-stopped

 

# Watchtower is going to keep our instances updated
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

 

  #cloudflare connector
  cloudflare:
    image: cloudflare/cloudflared
    container_name: cloudflare
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=


  #tautulli
  tautulli:
    image: lscr.io/linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - <media_folder>/Series:/tv
      - <media_folder>/Movies:/movies
      - <media_folder>/downloads:/downloads
      - <media_folder>/Anime:/anime
      - /opt/yams/config/tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped

 

  #openspeedtest
  openspeedtest:
    image: openspeedtest/latest
    container_name: openspeedtest
    ports:
      - 3000:3000
      - 3001:3001
    restart: unless-stopped

 

#scrutiny
  scrutiny:
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 8081:8080
      - 8086:8086
    volumes:
      - /run/udev:/run/udev:ro
      - ./config:/opt/scrutiny/config
      - ./influxdb:/opt/scrutiny/influxdb
    devices:
      - "/dev/sda"
      - "/dev/nvme0n1"
  #Heimdall
  heimdall:
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /opt/yams/config/heimdall:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
